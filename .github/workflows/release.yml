name: File Organizer Release

on:
  push:
    tags:
      - "v*.*.*" # Run workflow only when version tags are pushed (e.g., v1.0.0)

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run tests
        run: pytest tests/

  build:
    name: Build & Package
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            name: linux
          - os: windows-latest
            name: windows
          - os: macos-latest
            name: macos

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executables (v1 & v2)
        run: |
          pyinstaller --noconsole --onefile file_organizer/v1/main.py -n file-organizer-v1
          pyinstaller --noconsole --onefile file_organizer/v2/main.py -n file-organizer-v2

      - name: Package bundle
        run: |
          mkdir bundle
          cp README.md bundle/ || true
          cp organizer_config.json bundle/ || true
          cp dist/* bundle/

          if [ "${{ matrix.name }}" = "windows" ]; then
            powershell Compress-Archive -Path bundle/* -DestinationPath file-organizer-${{ matrix.name }}.zip
          else
            zip -r file-organizer-${{ matrix.name }}.zip bundle/
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: file-organizer-${{ matrix.name }}
          path: file-organizer-${{ matrix.name }}.zip

  release:
    name: Publish Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./release_artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./release_artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
